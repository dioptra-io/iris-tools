#!/bin/bash

#
# Tools for performing export and upload operations.
#
readonly PROCESS_MEASUREMENTS="${TOPLEVEL}/tools/process_measurements.sh"
readonly EXPORT_RAW_TABLES="${TOPLEVEL}/tools/export_raw_tables.sh"
readonly EXPORT_CLEANED_TABLES="${TOPLEVEL}/tools/export_cleaned_tables.sh"
readonly UPLOAD_METADATA="${TOPLEVEL}/tools/upload_metadata.sh"
readonly UPLOAD_DATA="${TOPLEVEL}/tools/upload_data.sh"

#
# Sourced by clean_tables.sh, export_cleaned_tables.sh, and upload_data.sh.
#
readonly IRIS_ENV="/md1400-1a/clones/infrastructure/iris/.env"

#
# The measurement metadata file for all measurements.
#
readonly MEAS_MD_ALL_JSON="${TOPLEVEL}/cache/meas_md_all.json"

#
# Variables related to measurement selection for publishing metadata
# and data.
#
readonly PUBLISH_METADATA_DISABLED=false
readonly PUBLISH_DATA_DISABLED=false
readonly PUBLISH_LOCKFILE="${TOPLEVEL}/conf/publish.lock"
readonly PUBLISH_METADATA_CONF="${TOPLEVEL}/conf/publish_metadata.conf"
readonly PUBLISH_DATA_CONF="${TOPLEVEL}/conf/publish_data.conf"
readonly DATA_SET_SIZE=5
readonly MIN_DAYS_TO_WAIT=0
readonly MAX_DAYS_TO_WAIT=0
readonly MEAS_TAG="zeph-gcp-daily.json"

#
# Variables related to uploading metadata.
#
readonly SCHEMA_METADATA_JSON="${TOPLEVEL}/db/schema_metadata.json"
readonly SNAPSHOT_LABELS="[]"		# use "[]" in case of no labels
readonly IRIS_VERSION="1.1.8"		# production:iris/pyproject.toml
readonly DIAMOND_MINER_VERSION="1.1.1"	# production:iris/pyproject.toml diamond-miner/pyproject.toml
readonly ZEPH_VERSION="1.3.0"		# iris-scheduler/pyproject.toml zeph/pyproject.toml
readonly CARACAL_VERSION="0.15.3"	# iris/dockerfiles/iris-agent.dockerfile
readonly PARSER_VERSION="1.0.0"		# iris-tools/iris_to_mlab.sql
readonly IPV4=True
readonly IPV6=False

#
# Variables related to cleaning data.
#
readonly ORDER_BY_PROBES="(probe_protocol, probe_dst_prefix, probe_ttl)"
readonly ORDER_BY_RESULTS="(probe_protocol, probe_src_addr, probe_dst_prefix, probe_dst_addr, probe_src_port, probe_dst_port, probe_ttl)"
readonly ORDER_BY_LINKS="(probe_protocol, probe_src_addr, probe_dst_prefix, probe_dst_addr, probe_src_port, probe_dst_port)"
readonly ORDER_BY_PREFIXES="(probe_protocol, probe_src_addr, probe_dst_prefix)"

readonly SELECT_PROBES="*"
readonly SELECT_RESULTS="capture_timestamp, probe_protocol, probe_src_addr, probe_dst_addr, probe_src_port, probe_dst_port, probe_ttl, quoted_ttl, reply_src_addr, reply_protocol, reply_icmp_type, reply_icmp_code, reply_ttl, reply_size, reply_mpls_labels, rtt, round, probe_dst_prefix, reply_src_prefix, private_probe_dst_prefix, private_reply_src_addr, destination_host_reply, destination_prefix_reply, valid_probe_protocol, time_exceeded_reply"
readonly SELECT_LINKS="*"
readonly SELECT_PREFIXES="*"

#
# Variables related to exporting data.
#
readonly EXPORT_DIR="${TOPLEVEL}/exported_tables"
readonly EXPORT_FORMAT="Parquet"
readonly PROBE_SRC_PORT_LIMIT="28096" # diamond-miner's DEFAULT_PROBE_SRC_PORT + 4096
readonly CLEANED_RESULTS_TABLE_EXPORT=$(cat <<EOF
  SELECT
    CAST(capture_timestamp AS Int64) * 1000000 AS capture_timestamp,
    probe_protocol 			       AS probe_protocol,
    IPv6NumToString(probe_src_addr)   	       AS probe_src_addr,
    IPv6NumToString(probe_dst_addr)            AS probe_dst_addr,
    probe_src_port 			       AS probe_src_port,
    probe_ttl 				       AS probe_ttl,
    quoted_ttl 				       AS quoted_ttl,
    IPv6NumToString(reply_src_addr)            AS reply_src_addr,
    reply_icmp_type 			       AS reply_icmp_type,
    reply_icmp_code 			       AS reply_icmp_code,
    reply_ttl 				       AS reply_ttl,
    rtt 				       AS rtt,
    IPv6NumToString(probe_dst_prefix)          AS probe_dst_prefix
  FROM \${DATABASE_NAME}.\${table}
  WHERE probe_src_port < $PROBE_SRC_PORT_LIMIT AND
  	probe_dst_prefix in (
        SELECT
	    DISTINCT probe_dst_prefix
	FROM \${DATABASE_NAME}.\${probes_table}
        WHERE
	    round = 1 AND
	    probe_ttl <= 10
	)
  FORMAT \${EXPORT_FORMAT}
EOF
)

#
# Variables related to uploading data.
#
readonly DATABASE_NAME="iris" # clickhouse
readonly IRIS_CLICKHOUSE_USER="iris"
readonly TABLES_TO_CLEAN=(results__)
readonly TABLES_TO_EXPORT=(results__)
readonly TABLES_TO_UPLOAD=(results__)
readonly GCP_PROJECT_ID="mlab-collaboration"
readonly GCP_INSTANCES="${TOPLEVEL}/conf/instances.conf"
readonly BQ_PUBLIC_DATASET="sorbonne" # public dataset with tables in scamper1 format
readonly BQ_PRIVATE_DATASET="sorbonne_private" # private dataset to store temporary tables during conversion
readonly BQ_PUBLIC_TABLE="iprs_data1" # data table in scamper1 format
readonly BQ_METADATA_TABLE="iprs_index1" # metadata table
readonly SCHEMA_RESULTS_JSON="${TOPLEVEL}/db/schema_results.json"
readonly SCHEMA_SCAMPER1_JSON="${TOPLEVEL}/db/schema_scamper1.json"
readonly TABLE_CONVERSION_QUERY="${TOPLEVEL}/db/iris_to_mlab.sql"
readonly SCHEMA_RESULTS=$(cat <<EOF
[
  { "name": "capture_timestamp", "type": "TIMESTAMP", "mode": "NULLABLE" },
  { "name": "probe_protocol", "type": "INTEGER", "mode": "REQUIRED" },
  { "name": "probe_src_addr", "type": "STRING", "mode": "REQUIRED" },
  { "name": "probe_dst_addr", "type": "STRING", "mode": "REQUIRED" },
  { "name": "probe_src_port", "type": "INTEGER", "mode": "REQUIRED" },
  { "name": "probe_ttl", "type": "INTEGER", "mode": "REQUIRED" },
  { "name": "quoted_ttl", "type": "INTEGER", "mode": "REQUIRED" },
  { "name": "reply_src_addr", "type": "STRING", "mode": "REQUIRED" },
  { "name": "reply_icmp_type", "type": "INTEGER", "mode": "REQUIRED" },
  { "name": "reply_icmp_code", "type": "INTEGER", "mode": "REQUIRED" },
  { "name": "reply_ttl", "type": "INTEGER", "mode": "REQUIRED" },
  { "name": "rtt", "type": "INTEGER", "mode": "REQUIRED" },
  { "name": "probe_dst_prefix", "type": "STRING", "mode": "REQUIRED" }
]
EOF
)
readonly UPDATE_IS_PUBLISHED=$(cat <<EOF
  UPDATE \`${BQ_PUBLIC_DATASET}.${BQ_METADATA_TABLE}\`
  SET is_published = True
  WHERE id = '\${meas_uuid}'
EOF
)

#
# Utility variables and functions.
#

readonly TIME=("/usr/bin/time" "--format" "real=%e user=%U sys=%S")
